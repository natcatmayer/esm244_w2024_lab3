---
title: "lab3_part2"
format: 
  html:
    code-fold: show
    toc: true
    number-sections: true
    embed-resources: true
editor: visual
execute:
  echo: true
  message: false
  warning: false 
---

```{r setup}
library(tidyverse)
library(here)
library(sf) # vector spatial data 
library(terra) # raster spatial data
library(tidyterra) # for rasters in ggplot

# for geospatial stats:
library(gstat)
library(stars)
```

# Overview

Create a variogram in R to understand the spatial dependence of groundwater depth in California 

# Read in the data! 

```{r}
ca_counties_sf <- read_sf(here('data', 'ca_counties', 'CA_Counties_TIGER2016.shp')) %>%
  janitor::clean_names() %>%
  select(name)

ca_dgw_sf <- read_sf(here('data', 'ca_dgw', 'F2013_DBGS_Points_20150720_093252.gpkg')) %>%
  janitor::clean_names()
```

Check CRS and make them the same 
```{r}
# command shift c to comment lines out
# st_crs(ca_counties_sf)
# st_crs(ca_dgw_sf)

ca_dgw_sf <- st_transform(ca_dgw_sf, 3857)

ggplot() + 
  geom_sf(data = ca_counties_sf) + 
  geom_sf(data = ca_dgw_sf, aes(color = depth))
```

# Focus on San Joaquin County 

```{r}
sj_county_sf <- ca_counties_sf %>%
  filter(name == 'San Joaquin')

sj_depth_sf <- ca_dgw_sf %>%
  st_intersection(sj_county_sf)

ggplot() + 
  geom_sf(data = sj_county_sf) + 
  geom_sf(data = sj_depth_sf, aes(color = depth)) + 
  theme_void()
```

# Spatial interpolation 

## Make a variogram 

```{r}
sj_dgw_vgm <- gstat::variogram(depth ~ 1, data = sj_depth_sf)
plot(sj_dgw_vgm)

vgm_fit <- fit.variogram(sj_dgw_vgm, 
                         model = vgm(model = 'Gau', nugget = TRUE))
plot(sj_dgw_vgm, vgm_fit)

attr(vgm_fit, 'SSErr')
```

```{r}
sj_grid <- st_bbox(sj_county_sf) %>%
  stars::st_as_stars(dx = 1000, dy= 1000)

dgw_krige <- krige(depth ~ 1, sj_depth_sf, sj_grid, model = vgm_fit)

plot(dgw_krige)
```

```{r}
krige_rast <- dgw_krige %>%
  terra::rast() %>%
  setNames(c('pred', 'var'))

ggplot() +
  tidyterra::geom_spatraster(data = krige_rast, 
                             aes(fill = pred)) + 
  geom_sf(data = sj_depth_sf, aes(fill = depth), shape = 21) +
  geom_sf(data = sj_county_sf, color = 'black', fill = NA) +
  scale_fill_gradient(low = 'blue', high = 'yellow')
```














